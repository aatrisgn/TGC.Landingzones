name: Deploy DNS Zones

on:
  push:
    branches: ["main"]
    paths:
        - "terraform/dnszones/*"
        - ".github/workflows/deploy_dnszones.yml"
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      applyTF:
        description: 'Apply TF plan?'
        required: true
        type: boolean
        default: false

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  plan_landingzones:
    name: "Plan DNS Zone deployment"
    runs-on: ubuntu-latest
    environment: prd
    defaults:
      run:
        working-directory: ./terraform/dnszones
    
    env:
      ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      ARM_USE_AZUREAD: true

    steps:
    - uses: actions/checkout@v3

    - name: Install Terraform
      run: bash "${{ github.workspace }}/.github/scripts/install_terraform.sh"

    - name: Terraform Fmt
      run: terraform fmt -check

    - name: Terraform Init
      run: |
        terraform init \
        -backend-config=resource_group_name="${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" \
        -backend-config=storage_account_name="${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" \
        -backend-config=container_name="${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
        -backend-config=key="dnszone.prd.tfstate"
        
    - name: Terraform Validate
      run: terraform validate -var-file=envs/prd.tfvars

    - name: Terraform Plan
      id: plan
      run: terraform plan -input=false -var-file=envs/prd.tfvars